# https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/store-information-in-variables

name: Build and run spring Boot with React web app

on:
  - push
  - pull_request

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  get-server-name:
    runs-on: self-hosted #ubuntu-22.04
    steps:
      - run: hostname -f
  build-app:
    needs: get-server-name
    runs-on: self-hosted #ubuntu-22.04
    steps:
      - uses: actions/checkout@v4.2.2
      - uses: actions/setup-java@v4.6.0
        with:
          distribution: 'liberica'
          java-version: '23'
          cache: 'gradle'
      - run: chmod +x ./gradlew
        working-directory: .
      #- run: ./gradlew make setup
      - run: ./gradlew wrapper --gradle-version 8.11.1
      - run: APP_PROFILE=test ./gradlew -i clean build
        env:
          APP_PROFILE: test
      #- run: APP_PROFILE=test ./gradlew test

  deploy-app:
    needs: build-app
    runs-on: self-hosted #ubuntu-22.04
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    if: ${{ github.event_name == 'push' }}
    steps:
      - uses: actions/checkout@v4.2.2
        name: Checkout repo
      - uses: docker/login-action@v3.3.0
        name: Login to ${{ env.REGISTRY }}
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ github.token }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5.6.1
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - uses: docker/build-push-action@v6.10.0
        name: Push to ${{ env.REGISTRY }}
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  run-compose:
    runs-on: self-hosted
    needs: deploy-app
    environment: prod
    env:
      APP_PROFILE: ${{ secrets.APP_PROFILE }}
      APP_ADMIN_EMAIL: ${{ secrets.APP_ADMIN_EMAIL }}
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_PORT: ${{ secrets.DB_PORT }}
    steps:
      - name: Stop and remove containers, networks
        run: docker compose -f ./compose.prod.yaml down --remove-orphans
      - name: Remove unused data
        run: docker system prune -a -f
      - name: docker-compose
        run:  docker compose -f ./compose.prod.yaml up --detach
