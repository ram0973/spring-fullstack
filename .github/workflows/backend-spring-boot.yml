name: Build and run spring Boot with React web app

on:
  - push
  - pull_request

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-app:
    runs-on: self-hosted #ubuntu-22.04
    steps:
      - uses: actions/checkout@v4.2.2
      - uses: actions/setup-java@v4.6.0
        with:
          distribution: 'liberica'
          java-version: '23'
          cache: 'gradle'
      - run: chmod +x ./gradlew
        working-directory: .
      - run: make setup
      - run: make build
      - run: make test

  deploy-app:
    needs: build-app
    runs-on: self-hosted #ubuntu-22.04
    permissions:
      contents: read
      packages: write
    if: ${{ github.event_name == 'push' }}
    steps:
      - uses: actions/checkout@v4.2.2
      - uses: docker/login-action@v3.3.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ github.token }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5.6.1
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - uses: docker/build-push-action@v6.10.0
        with:
          context: .
          file: ./docker/spring/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  stop-compose:
    runs-on: self-hosted
    needs: deploy
    steps:
      - name: Stop and remove containers, networks
        run: docker-compose down
      #- name: Remove unused data
      #  run: docker system prune -a -f
  run-compose:
    runs-on: self-hosted
    needs: stop-compose
    env:
      LARGE_SECRET_PASSPHRASE: ${{ secrets.LARGE_SECRET_PASSPHRASE }}
    steps:
      - name: docker-compose
        run: docker compose -f production.yml up -d
